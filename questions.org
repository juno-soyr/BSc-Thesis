:PROPERTIES:
:ID:       36b01802-40d4-4cb2-8888-70ee8c436a60
:END:
#+title: Notes
* Abstract
** What is the purpose of my paper?
Is lambda calculus a /reasonable machine/? (Slot and van Emde Boas) And therefore, could we represent a turing machine, and therefore any complexity class in lambda calculus?
* Introduction
** Why is the problem hard?
*** Size-explosion
A lambda term of size $n$ that in $O(n)$ steps produces an outpot of size $O(2^n)$
- Example: $(\lambda y_1.(y_1 y_1))$
** Rewriting terms
*** LSC explanation
** Aim of the thesis
- Why Leftmost Outermost?
  - Normalizing requirements and proofs
- Analyze and explain the use of lambda calculus to represent complexity class(es).
- Start with some simple problem in P and represent it through lambda calculus.
*** Weak Call-by-value Lambda calculus vs Linear head substitution.
- Questions: encoding of strings over $\Sigma$? Kleene star?.
** Lets get to it
*** Proof of LO to LOU and LOU to RAM.
** Reduce the level of complexity of the High Level Implementation Syste
*** Look up notes from EP
*** Research Question:
A description of high level implementation systems in the LSC.
** Lambda Implementation
*** Use debruijn ?
*** Look into adbmal notation for lambda calculus.
*** Finished a basic build without any notation right now.
It is up to the user in this case to provide an accurate description of the term. Maybe using applicative functors?
